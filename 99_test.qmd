

```{python}
import numpy as np
import matplotlib.pyplot as plt

# Define theta values
theta = np.linspace(0, 5, 500)
R1 = np.ones_like(theta)            # R(θ, θ̂₁) = 1
R2 = (3 - theta) ** 2               # R(θ, θ̂₂) = (3 - θ)²

# Create the plot
plt.figure(figsize=(8, 5))
plt.plot(theta, R1, label=r'$R(\theta, \hat{\theta}_1)$', linewidth=2)
plt.plot(theta, R2, label=r'$R(\theta, \hat{\theta}_2)$', linewidth=2)
plt.xlabel(r'$\theta$')
plt.ylabel('Risk')
plt.title('Comparison of Risk Functions')
plt.legend()
plt.grid(True)
# Set the x and y limits
plt.xlim(0, 5)
plt.ylim(0, 4)
plt.tight_layout()
# grid(True)
plt.grid(False)

# Show the plot
plt.show()


```



```{python}
import numpy as np
import matplotlib.pyplot as plt

# Define p values from 0 to 1
p = np.linspace(0.01, 0.99, 500)  # Avoid 0 and 1 to prevent division by 0
n = 30  # Example sample size

# Risk function R(p, p̂₁) = p(1 - p) / n
R1 = (p * (1 - p)) / n

# Risk function R(p, p̂₂) = n / (4(n + sqrt(n))^2)
R2 = np.full_like(p, n / (4 * (n + np.sqrt(n))**2))

# Plotting
plt.figure(figsize=(8, 5))
plt.plot(p, R1, label=r'$R(p, \hat{p}_1)$', linewidth=2)
plt.plot(p, R2, label=r'$R(p, \hat{p}_2)$', linewidth=2, linestyle='--')
plt.xlabel('p')
plt.ylabel('Risk')
plt.title('Comparison of Risk Functions: $\hat{p}_1$ vs $\hat{p}_2$')
plt.legend()
plt.grid(False)
plt.tight_layout()
# Remove unit x-axis and y-axis unités
plt.xlim(0, 1)
plt.ylim(0, 0.009)
plt.xticks([""])
plt.show()

```